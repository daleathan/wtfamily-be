WTFamily TODO
=============

Goals
-----

- This is a publishing system.  Only displays info, no editing.
- It *may* evolve and eventually get editing capabilities in a distant future.
- YAML is bad for backend but great for source control purposes.
- An ETL layer for GRAMPS compatibility and YAML DB may be decoupled from the
  publishing system at some point.

Storage
-------

- [x] Remove hlinks, use IDs.

      challenges:

      - forward-looking hlink→ID resolver

        - perhaps as a final step, outside of the converter?
          it would just register the mappings on an external visitor object)

          - we'll also need to go *into* the items.  They should be flat-ish, i.e.
            each item is a dictionary where values can be single or multiple.
            This is defined by schema.
            So we just iterate the list if the field isn't in SINGLE_VALUE_FIELDS.

            General pattern::

                fooref:
                - {hlink: x, quux: 1}
                barref:
                - {hlink: y, quux: 2}

            Should we just add ID to that?

      - some entities (e.g. namemaps) don't have IDs

        - currently using UUID but not sure if it's ok

- [x] Split items into separate YAML files.
- [ ] Refactor.
- [ ] Caching.  (implement as late as possible.)

Import/Export
-------------

- [ ] Unify models with validation schemata.
- [ ] Add ETL option: delete local items not found in imported data
- [ ] Export to GrampsXML
- [ ] Export to GEDCOM

Access Control
--------------

- [ ] Hide information marked as private unless a certain HTTP header is present

Linked Entities Management
--------------------------

- [ ] CLI tool to create files with pre-filled boilerplate + auto-update related ones

  e.g. `add person --fullname=John\ Doe --child-of=alice --father-of=peter`
  or `add event --who=john_doe --what=birth --where=london --source=citation123`

- [ ] CLI tool to link existing entities without editor

  e.g. `update person john_doe --child-of=alice_doe --born=est\ 1775`

Web interface
-------------

- [ ] Async UI with RESTful service

  - Strategy for family tree: fetch and cache the whole /family/ list
    (it's lightweight), then fetch individuals via /person/?ids=foo,bar
    as needed

Visualisation
-------------

Fan/Sunbirst Chart

    http://bl.ocks.org/mbostock/4348373 — zoomable sunburst

    more than just zoom, very useful.
    not sure about text but perhaps it can be added somehow.
